멀티 테트리스 게임

https://github.com/soyeonii/Multi_Tetris

!!! (주의) 폰트가 Fixedsys, 18-point인 환경에서만 게임 화면이 제대로 동작합니다. !!!
- Change Settings... > Window > Appearance > Font: Fixedsys, 18-point

클라이언트-서버의 통신을 위해 TCP를 사용했습니다.

# 서버(server.c)
- 서버 소켓을 생성하고 클라이언트의 요청을 대기합니다.
- 모든 방과 조건 변수를 초기화합니다.
- 모든 방마다 두 명이 모였는지(게임 시작이 가능한지)를 확인하는 스레드를 생성합니다.
	- 뮤텍스를 잠가 방 정보 확인 시 동기화 문제를 방지합니다.
	- 모든 방을 돌며 게임 시작이 가능한지 확인합니다.
	- 가능한 방이 있다면 방의 상태를 게임 중으로 바꾸고 모든 클라이언트에게 게임을 시작할 수 있음을 전달합니다.
	- 게임 점수를 초기화합니다.
	- 해당 방의 클라이언트 스레드에 조건 알림을 보냅니다.
	- 뮤텍스를 해제하고 다시 계속해서 확인합니다.
- 클라이언트 요청을 수락하고 클라이언트의 정보(Client)를 저장합니다.
- 클라이언트마다 클라이언트 정보를 인자로 전달하여 스레드를 생성하고 프로세스에서 분리합니다. (스레드 종료 즉시 자원을 free() 하기 위해)
	- 클라이언트로부터 선택한 메뉴를 전달받습니다.
	- (1) Play 선택 시
		- 클라이언트가 선택한 방 번호를 전달받습니다.
		- 잘못된 방 번호인 경우 클라이언트에게 오류 메시지를 전달합니다.
		- 뮤텍스를 잠가 클라이언트 추가 시 동기화 문제를 방지합니다.
		- 게임에 참여한 적이 있으면 이전에 들어간 방에서 자신의 정보를 제거합니다.
		- 게임이 진행 중이지 않은 방이라면 방에 클라이언트 정보를 추가하고 클라이언트에게 결과를 전달합니다.
		- 방에 두 명이 모였는지 확인하는 스레드에게 조건 알림을 받을 때까지 대기합니다.
		- 게임이 진행 중인 방이라면 클라이언트에게 오류 메시지를 전달하고 다시 메뉴 및 방 번호를 전달받습니다.
		- 테트리스로부터 게임 점수를 전달받습니다.
		- 누가 이겼는지 점수를 비교해 결과를 클라이언트에게 전달합니다.
		- 게임이 종료된 방을 다시 입장 가능한 방으로 만듭니다.
	- (2) Exit 선택 시
		- 클라이언트를 제거하고 소켓을 종료합니다.
- 도중에 클라이언트와의 연결이 끊기면 클라이언트 정보를 제거합니다.
	- 클라이언트가 속해 있던 방에서 클라이언트 정보를 제거합니다.

# 클라이언트(client.c)
- signal을 사용해 CTRL+C(active close)를 무시합니다.
- 서버로 연결 요청을 보냅니다.
- 연결에 성공하면, 게임 로고와 메뉴를 출력합니다.
- 플레이어는 원하는 메뉴를 선택합니다.
- (1) Play 선택 시
	- 들어가고자 하는 방 번호를 선택해 들어갑니다.
	- 서버로 방 번호를 전달해 들어갈 수 있는지를 전달받습니다.
	- 이미 게임이 진행 중이거나 잘못된 방 번호를 선택했을 경우 다시 선택합니다.	
	- 들어간 방에 두 명의 플레이어가 모일 때까지 기다립니다.
	- 두 명의 플레이어가 모이면 게임이 시작됩니다.
	- 자식 프로세스를 생성해 자식 프로세스에서 게임을 실행합니다.
	- 부모 프로세스에서는 자식 프로세스의 종료를 기다리고 게임이 끝나면 다시 부모 프로세스로 돌아와 작업을 이어갑니다.
	- 서버로부터 게임 결과를 전달받아 출력합니다.
	- 방에서 나와 다시 메뉴를 선택합니다.
- (2) Exit 선택 시
	- 소켓을 종료해 서버와의 연결이 끊기며 게임이 종료됩니다.

# 테트리스(tetris.c)
- signal을 사용해 CTRL+C(active close)를 무시합니다.
- ncurses를 사용해 화면을 꾸몄습니다.
- 시작 화면에서 별이 반짝이는 효과를 주기 위해 비동기적 입력을 받습니다.
- 파일 입출력을 사용해 최고 점수를 기록하고 가져옵니다.
- 게임을 종료하거나 게임이 끝나면 서버에게 게임 점수를 전달합니다.
- 참고 : https://blog.naver.com/azure0777/220295388741

P.S.
예외 처리 및 디테일에 많은 신경을 썼습니다.
게임 사운드를 추가하려 하였으나 잘 되지 않아 추후에 추가할 예정입니다.
